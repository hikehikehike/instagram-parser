version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_db_post
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  fastapi:
    build: .
    container_name: fastapi_app_post
    restart: always
    depends_on:
      - db
    environment:
      DATABASE_URL: 'postgresql+asyncpg://myuser:mypassword@db:5432/mydatabase'
    ports:
      - '8000:8000'
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend

  celery:
    build: .
    container_name: celery_worker
    restart: always
    depends_on:
      - redis
      - fastapi
      - db
    environment:
      DATABASE_URL: 'postgresql+asyncpg://myuser:mypassword@db:5432/mydatabase'
      CELERY_BROKER_URL: 'redis://redis:6379/0'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
      PYTHONPATH: '/app'
    command: celery -A tasks.celery_app worker --loglevel=info
    networks:
      - backend

  celery-beat:
    build: .
    container_name: celery_beat
    restart: always
    depends_on:
      - redis
      - fastapi
      - db
    environment:
      DATABASE_URL: 'postgresql+asyncpg://myuser:mypassword@db:5432/mydatabase'
      CELERY_BROKER_URL: 'redis://redis:6379/0'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
      PYTHONPATH: '/app'
    command: celery -A tasks.celery_app beat --loglevel=info
    networks:
      - backend

  test:
    build: .
    container_name: fastapi_test
    depends_on:
      - db
      - fastapi
    environment:
      PYTHONPATH: '/app'
    command: pytest --maxfail=1 --disable-warnings -q

    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
